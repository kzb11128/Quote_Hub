    <div class="flex flex-col md:flex-row justify-center mt-6 md:space-x-6">
        <form class="login-form">
        <div class="w-150 h-auto rounded-lg pt-8 pb-8 px-8 flex flex-col items-center text-gray-900 bg-white rounded-lg border border-gray-300 shadow-md shadow-[#542745]/40 focus:ring-blue-500 focus:border-blue-500 mt-10">
            <div class="mb-4">
          <label for="email-login" class="block">Email:</label>
          <input type="email" id="email-login" name="email" required class="w-full border border-gray-300 rounded px-3 py-2">
        </div>
        <div class="mb-6">
          <label for="password" class="block">Password:</label>
          <input type="password" id="password" name="password" required class="w-full border border-gray-300 rounded px-3 py-2">
        </div>
        <div class="flex justify-center">
          <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded cursor-pointer">Login</button>
        </div>
        </form>
        <p class="text-sm text-gray-700 mt-4">New to Quote Hub? <a href="/newaccount" class="text-blue-500 hover:underline">Sign up</a></p>
      </div>
      
      <div class="quote-container w-full md:w-auto mt-6 md:mt-0">
        {{#each quotes}}
        <div class="quote-item">
          <p class="text-3xl">{{quote_text}}</p>
          <p class="text-2xl">- {{author}}</p>
        </div>
        {{/each}}
      </div>
    
    </div>
  </div>

  <style>
    .quote-container {
      position: relative;
      width: 200px;
      height: 400px;
      overflow: hidden;
    }

    .quote-item {
      opacity: 0;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      transition: opacity 500ms ease-in-out;
    }

    .quote-item.active {
      opacity: 1;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const quoteItems = document.querySelectorAll('.quote-item');
      const duration = 5000; // Duration of each quote on the screen in milliseconds
      const delay = 2000; // Delay between quote transitions in milliseconds

      let currentIndex = 0;

      function fadeItemIn(index) {
        setTimeout(function () {
          quoteItems[currentIndex].classList.remove('active');
          quoteItems[index].classList.add('active');
          currentIndex = index;

          setTimeout(function () {
            quoteItems[index].classList.remove('active');

            const nextIndex = (index + 1) % quoteItems.length;
            fadeItemIn(nextIndex);
          }, duration);
        }, delay);
      }

      fadeItemIn(1); // Start with the second quote item
    });
  </script>
  <script src="./js/login.js"></script>